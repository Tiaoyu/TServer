syntax = "proto3";
option csharp_namespace = "Common.Protobuf";

// 约定协议上限为 10000 条
// C2S协议号从 1 开始 S2C协议号为 10000 减去其对应的C2S协议号
// 例: 1 是C2S登陆协议好 那么 9999 则为 S2C 登陆应答协议号

enum S2C_PROTOCOL_TYPE {
  S2C_Begin    = 0;
  S2C_Test     = 5000;

  S2C_Login    = 9999;
  S2C_Register = 9998;
  S2C_Move     = 9997;
  S2C_Sight    = 9996;
  S2C_StopMove = 9995;
}

enum C2S_PROTOCOL_TYPE {
  C2S_Begin    = 0;
  C2S_Test     = 4999;

  C2S_Login    = 1;
  C2S_Register = 2;
  C2S_Move     = 3;
  C2S_NavAuto  = 4;
  C2S_StopMove = 5;
}

message C2STest {
  C2S_PROTOCOL_TYPE type = 1;
  float x = 2;
  float y = 3;
}

// C2S
message C2SLogin {
  C2S_PROTOCOL_TYPE type = 1;
  string name = 2;
  string password = 3;
}

message C2SRegister {
  C2S_PROTOCOL_TYPE type = 1;
  string name = 2;
  string password = 3;
}

message Vector {
    double x = 1;
    double y = 2;
    double z = 3;
}
message C2SMove {
  C2S_PROTOCOL_TYPE type = 1;
  double x = 2;
  double y = 3;
  double speed = 4;
  bool isUsePosition = 5;
  Vector orientation = 6;
  Vector position = 7; // 下一个位置
  Vector moveDirection = 8; // 移动方向
}

message C2SNavAuto {
  C2S_PROTOCOL_TYPE type = 1;
  double x = 2;
  double y = 3;
}

message C2SStopMove
{
  C2S_PROTOCOL_TYPE type = 1;
}

// S2C
message RoleInfo {
    int32 id = 1;
    double x = 2;
    double y = 3;
}
message EntityInfo
{
    int32 id = 1;
    int32 entityType = 2;
    double x = 3;
    double y = 4;
}

message S2CTest {
  S2C_PROTOCOL_TYPE type = 1;
  repeated EntityInfo RoleList = 2;
}

message S2CLogin {
  S2C_PROTOCOL_TYPE type = 1;
  int32 res = 2;
  RoleInfo roleInfo = 3;
}

message  S2CRegister {
  S2C_PROTOCOL_TYPE type = 1;
  string res = 2;
}

message S2CMove {
    S2C_PROTOCOL_TYPE type = 1;
    repeated EntityInfo EntityInfoList = 2;
}

message S2CSight {
    enum ESightOpt {
        EnterSight = 0;
        LeaveSight = 1;
    }
    S2C_PROTOCOL_TYPE type = 1;
    ESightOpt SightOpt = 2;
    EntityInfo EntityInfo = 3;
}

message S2CStopMove {
    S2C_PROTOCOL_TYPE type = 1;
    Vector position = 2;
}
